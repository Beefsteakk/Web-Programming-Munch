@{
    ViewData["Title"] = "Employees";
    var employees = ViewBag.Employees as List<EffectiveWebProg.Models.EmployeesModel>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Management</title>
    <link rel="stylesheet" href="~/css/employee.css">
</head>
<body>
    <div class="main-content">
        <div class="header">
            <input type="text" class="search" placeholder="Shift+K to search a user">
            <div class="header-icons">
                <div class="icon">ðŸ””</div>
                <div class="icon">ðŸ‘¤</div>
            </div>
        </div>
        <div class="content">
            <div class="employee-header">
                <h1>@(employees?.Count ?? 0) Employees</h1>
                <div class="actions">
                    <button class="filter-button">Filter</button>
                    <button class="add-button" onclick="showAddEmployeeModal()">+ Add Employee</button>
                </div>
            </div>
            <div class="employee-cards">
                @if (employees != null)
                {
                    foreach (var employee in employees)
                    {
                        <div class="employee-card">
                            <div class="employee-photo"><img src="@employee.EmployeePic" alt="Employee Photo"></div>
                            <div class="employee-info">
                                <h3>@employee.EmployeeName</h3>
                                <p>@employee.Role</p>
                                <p>Hired Date: @employee.HireDate.ToString("MM/dd/yyyy")</p>
                                <p>Email: @employee.Email</p>
                                <p>Phone: @employee.PhoneNumber</p>
                                <div class="actions">
                                    <button onclick="editEmployee('@employee.EmployeeID')">Edit</button>
                                    <button onclick="deleteEmployee('@employee.EmployeeID')">Delete</button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <!-- Add Employee Modal -->
    <div id="addEmployeeModal" style="display:none;">
        <h2>Add Employee</h2>
        <form id="addEmployeeForm">
            <div class="form-group">
                <label for="addEmployeeName">Employee Name</label>
                <input type="text" id="addEmployeeName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="addRole">Role</label>
                <input type="text" id="addRole" class="form-control" />
            </div>
            <div class="form-group">
                <label for="addPhoneNumber">Phone Number</label>
                <input type="text" id="addPhoneNumber" class="form-control" />
            </div>
            <div class="form-group">
                <label for="addEmail">Email</label>
                <input type="text" id="addEmail" class="form-control" />
            </div>
            <div class="form-group">
                <label for="addHireDate">Hire Date</label>
                <input type="date" id="addHireDate" class="form-control" />
            </div>
            <div class="form-group">
                <label for="addSalary">Salary</label>
                <input type="number" id="addSalary" class="form-control" />
            </div>
            <div class="form-group">
                <label for="addEmployeePic">Employee Picture URL</label>
                <input type="text" id="addEmployeePic" class="form-control" />
            </div>
            <button type="button" onclick="submitAddEmployeeForm()">Save</button>
        </form>
    </div>

    <!-- Edit Employee Modal -->
    <div id="editEmployeeModal" style="display:none;">
        <h2>Edit Employee</h2>
        <form id="editEmployeeForm">
            <input type="hidden" id="editEmployeeID" />
            <div class="form-group">
                <label for="editEmployeeName">Employee Name</label>
                <input type="text" id="editEmployeeName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="editRole">Role</label>
                <input type="text" id="editRole" class="form-control" />
            </div>
            <div class="form-group">
                <label for="editPhoneNumber">Phone Number</label>
                <input type="text" id="editPhoneNumber" class="form-control" />
            </div>
            <div class="form-group">
                <label for="editEmail">Email</label>
                <input type="text" id="editEmail" class="form-control" />
            </div>
            <div class="form-group">
                <label for="editHireDate">Hire Date</label>
                <input type="date" id="editHireDate" class="form-control" />
            </div>
            <div class="form-group">
                <label for="editSalary">Salary</label>
                <input type="number" id="editSalary" class="form-control" />
            </div>
            <div class="form-group">
                <label for="editEmployeePic">Employee Picture URL</label>
                <input type="text" id="editEmployeePic" class="form-control" />
            </div>
            <button type="button" onclick="submitEditEmployeeForm()">Save</button>
        </form>
    </div>

    <script>
        function showAddEmployeeModal() {
            document.getElementById('addEmployeeModal').style.display = 'block';
        }

        function editEmployee(employeeId) {
            fetch('/Employees/GetEmployee/' + employeeId)
                .then(response => response.json())
                .then(employee => {
                    document.getElementById('editEmployeeID').value = employee.EmployeeID;
                    document.getElementById('editEmployeeName').value = employee.EmployeeName;
                    document.getElementById('editRole').value = employee.Role;
                    document.getElementById('editPhoneNumber').value = employee.PhoneNumber;
                    document.getElementById('editEmail').value = employee.Email;
                    document.getElementById('editHireDate').value = employee.HireDate.split('T')[0];
                    document.getElementById('editSalary').value = employee.Salary;
                    document.getElementById('editEmployeePic').value = employee.EmployeePic;
                    document.getElementById('editEmployeeModal').style.display = 'block';
                });
        }

        function deleteEmployee(employeeId) {
            if (confirm("Are you sure you want to delete this employee?")) {
                fetch('/Employees/DeleteEmployee/' + employeeId, {
                    method: 'DELETE'
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert("Failed to delete employee.");
                    }
                });
            }
        }

        function submitAddEmployeeForm() {
            const employee = {
                EmployeeName: document.getElementById('addEmployeeName').value,
                Role: document.getElementById('addRole').value,
                PhoneNumber: document.getElementById('addPhoneNumber').value,
                Email: document.getElementById('addEmail').value,
                HireDate: document.getElementById('addHireDate').value,
                Salary: document.getElementById('addSalary').value,
                EmployeePic: document.getElementById('addEmployeePic').value,
                RestID: 'deab13da-1e6b-11ef-ad56-662ef0370963' // Replace with actual RestID
            };

            fetch('/Employees/AddEmployee', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(employee)
            }).then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    return response.json().then(errorData => {
                        console.error('Failed to add employee:', errorData);
                        alert('Failed to add employee. ' + (errorData.message || ''));
                    });
                }
            }).catch(error => {
                console.error('Failed to add employee:', error);
                alert('Failed to add employee. ' + error.message);
            });
        }

        function submitEditEmployeeForm() {
            const employee = {
                EmployeeID: document.getElementById('editEmployeeID').value,
                EmployeeName: document.getElementById('editEmployeeName').value,
                Role: document.getElementById('editRole').value,
                PhoneNumber: document.getElementById('editPhoneNumber').value,
                Email: document.getElementById('editEmail').value,
                HireDate: document.getElementById('editHireDate').value,
                Salary: document.getElementById('editSalary').value,
                EmployeePic: document.getElementById('editEmployeePic').value,
                RestID: 'deab13da-1e6b-11ef-ad56-662ef0370963' // Replace with actual RestID
            };

            fetch('/Employees/EditEmployee', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(employee)
            }).then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    return response.json().then(errorData => {
                        console.error('Failed to edit employee:', errorData);
                        alert('Failed to edit employee. ' + (errorData.message || ''));
                    });
                }
            }).catch(error => {
                console.error('Failed to edit employee:', error);
                alert('Failed to edit employee. ' + error.message);
            });
        }
    </script>
</body>
</html>
