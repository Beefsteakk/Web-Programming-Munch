@{
    ViewData["Title"] = "Edit Restaurant Profile";
    var details = ViewBag.RestaurantDetails as RestaurantsModel;
    var followerCounts = ViewBag.FollowerCounts as Dictionary<string, int>;
    var restaurantId = "12345"; // Replace with your specific restaurant ID
    <link href="~/css/editprofile.css" rel="stylesheet" />
}
<div class="container">
    <div class="row">
        <div class="form_area">
            <p class="title">Edit Restaurant Profile</p>
            <form action="/RestProfile/SaveProfile" method="post" enctype="multipart/form-data">
                <input type="hidden" name="RestID" value="@details.RestID" />
                <div class="form_group">
                    <label class="sub_title" for="name">Name</label>
                    <input value="@details.RestName" id="RestName" name="RestName" class="form_style" type="text"
                        required>
                </div>
                <div class="form_group">
                    <label class="sub_title" for="email">Email</label>
                    <input type="email" id="RestEmail" name="RestEmail" class="form_style" value="@details.RestEmail"
                        required>
                </div>
                <div class="form_group">
                    <label class="sub_title" for="RestAddress">Restaurant Address</label>
                    <div class="input-group">
                        <div class="input-container">
                            <input type="text" id="RestAddress" name="RestAddress" class="form_style"
                                value="@details.RestAddress" required />
                            <button type="button" class="btn btn-outline-secondary map-button" onclick="openMapModal()">
                                Map
                            </button>
                        </div>
                    </div>
                    <input type="hidden" id="latitude" name="RestLat" value="@details.RestLat" />
                    <input type="hidden" id="longitude" name="RestLong" value="@details.RestLong" />
                </div>

                <div class="form_group">
                    <label class="sub_title" for="RestContact">Restaurant Contact</label>
                    <input type="tel" id="RestContact" name="RestContact" class="form_style"
                        value="@details.RestContact" required />
                </div>

                <div class="form_group">
                    <label class="sub_title" for="RestWebsite">Restaurant Website</label>
                    <input type="url" id="RestWebsite" name="RestWebsite" class="form_style"
                        value="@details.RestWebsite" required />
                </div>

                <div class="form_group">
                    <label class="sub_title" for="RestBio">Restaurant Bio</label>
                    <textarea id="RestBio" name="RestBio" class="form_style" rows="3"
                        required>@details.RestBio</textarea>
                </div>

                <div class="form_group">
                    <button type="submit" class="gbtn">Save</button>
                    <button type="button" class="rbtn"
                        onclick="window.location.href='/RestProfile'">Cancel</button>
                </div>
            </form>
        </div>

    </div>
</div>


<!-- Map Modal -->
<div class="modal fade" id="mapModal" tabindex="-1" role="dialog" aria-labelledby="mapModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mapModalLabel">Select Address</h5>
                <button type="button" class="close" data-dismiss="modal" onclick="closeMapModal()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input id="pac-input" class="controls form-control mb-3" type="text" placeholder="Search Box" />
                <div id="map" style="height: 400px;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeMapModal()" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveAddress()">Save Address</button>
            </div>
        </div>
    </div>
</div>
<script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBcZ-tpp7-d401k61UO39tGYGvq-yOAn1s&libraries=places"></script>
<script>
    let map, marker, searchBox;

    function openMapModal() {
        $('#mapModal').modal('show');
        setTimeout(() => initializeMap(), 500);
    }
    function closeMapModal() {
        $('#mapModal').modal('hide');
    }

    function initializeMap() {
        const initialLocation = { lat: @details.RestLat, lng: @details.RestLong }; // Default to initial coordinates

        map = new google.maps.Map(document.getElementById("map"), {
            center: initialLocation,
            zoom: 12,
            mapTypeId: "roadmap",
        });

        marker = new google.maps.Marker({
            position: initialLocation,
            map: map,
            draggable: true
        });

        searchBox = new google.maps.places.SearchBox(document.getElementById("pac-input"));

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(document.getElementById("pac-input"));

        map.addListener("bounds_changed", () => {
            searchBox.setBounds(map.getBounds());
        });

        searchBox.addListener("places_changed", () => {
            const places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }

            const bounds = new google.maps.LatLngBounds();

            places.forEach((place) => {
                if (!place.geometry || !place.geometry.location) {
                    console.log("Returned place contains no geometry");
                    return;
                }

                marker.setPosition(place.geometry.location);

                if (place.geometry.viewport) {
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });

            map.fitBounds(bounds);
        });

        map.addListener("click", (event) => {
            placeMarker(event.latLng);
        });

        marker.addListener("dragend", (event) => {
            placeMarker(event.latLng);
        });
    }

    function placeMarker(location) {
        marker.setPosition(location);
        map.panTo(location);
    }

    function saveAddress() {
        const geocoder = new google.maps.Geocoder();
        const markerPosition = marker.getPosition();

        geocoder.geocode({ 'location': markerPosition }, function (results, status) {
            if (status === 'OK') {
                
                if (results[0]) {
                   
                    document.getElementById('RestAddress').value = results[0].formatted_address;
                    document.getElementById('latitude').value = markerPosition.lat();
                    document.getElementById('longitude').value = markerPosition.lng();

                    // Mini refresh: Update the initial location to the new position
                    const newLocation = { lat: markerPosition.lat(), lng: markerPosition.lng() };
                    map.setCenter(newLocation);
                    marker.setPosition(newLocation);

                    $('#mapModal').modal('hide');
                } else {
                    alert('No results found');
                }
            } else {
                alert('Geocoder failed due to: ' + status);
            }
        });
    }
</script>



