@{
    ViewData["Title"] = "Map";
}
<title>Restaurants</title>

<style type="text/css">
    h1 {
        text-align: center;
        margin-bottom: 1.5rem;
    }
    .map {
        width: 95%;
        height: 650px;
        margin: 0 auto; /* Center the map */
        border: 1px solid black;
    }       
</style>

<h1>@ViewData["meow"]</h1> <!-- Display the title -->

<div>
    <input type="text" id="searchQuery" placeholder="Search Restaurants By Name .."/>
    <label for="minRating">Min Rating:</label>
    <input type="number" id="minRating" step="0.1" min="0" max="5"/>
    <label for="maxRating">Max Rating:</label>
    <input type="number" id="maxRating" step="0.1" min="0" max="5"/>
    </select>
    <button onclick="filterRestaurants()">Search</button>
</div>

<div id="map" class="map"></div>

@section Scripts {
    <script>
        let map;
        let markers = [];

        function initMap() {
            // Create a map centered at a default location in Singapore
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: { lat: 1.3521, lng: 103.8198 }
            });

            // Initial fetch of all locations
            filterRestaurants();
        }

        function clearMarkers() {
            for (let marker of markers) {
                marker.setMap(null);
            }
            markers = [];
        }

        function addMarker(lat, lng, name, rating, restID) {
            const latLng = { lat: lat, lng: lng };
            const marker = new google.maps.Marker({
                position: latLng,
                map: map,
                title: name
            });

            const contentString = `
                <div>
                    <h3>${name}</h3>
                    <p>Rating: ${rating !== null ? rating : 'N/A'}</p>
                    <a href="/Restaurant/RestProfile/" target="_blank">Go to Restaurant Page</a>
                </div>
            `;

            const infowindow = new google.maps.InfoWindow({
                content: contentString
            });

            marker.addListener('click', function() {
                infowindow.open(map, marker);
            });

            markers.push(marker);
        }

        function filterRestaurants() {
            const searchQuery = document.getElementById('searchQuery').value;
            const minRating = document.getElementById('minRating').value;
            const maxRating = document.getElementById('maxRating').value;

            console.log(`Search Query: ${searchQuery}, Min Rating: ${minRating}, Max Rating: ${maxRating}`);

            fetch(`/Map/GetLocations?searchQuery=${searchQuery}&minRating=${minRating}&maxRating=${maxRating}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Filtered data:', data);
                    clearMarkers();

                    if (data.length > 0) {
                        const bounds = new google.maps.LatLngBounds();
                        data.forEach(location => {
                            const lat = parseFloat(location.lat);
                            const lng = parseFloat(location.lng);
                            console.log(`Adding marker: ${location.name} at [${lat}, ${lng}]`);
                            addMarker(lat, lng, location.name, location.rating, location.restID);
                            bounds.extend({ lat: lat, lng: lng });
                        });
                        map.fitBounds(bounds);
                    } else {
                        console.log('No locations found');
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Initializing the map after the DOM content is loaded
            initMap();
        });
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCln59tQOKYJfWz1ywTtqzuQLG8Cj5m1yg&callback=initMap" async defer></script>
}
